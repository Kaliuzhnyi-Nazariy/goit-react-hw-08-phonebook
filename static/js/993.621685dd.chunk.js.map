{"version":3,"file":"static/js/993.621685dd.chunk.js","mappings":"mPAGaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0MAWzBC,GAAoBJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uNASjCI,GAAqBP,EAAAA,EAAAA,SAAOQ,EAAAA,GAAPR,CAAoBS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qEAMzCO,EAAcV,EAAAA,QAAAA,MAAYW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oEAM1BS,EAAqBZ,EAAAA,QAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iN,8BCjClCW,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAAM,EACxDC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAAU,EAI7DC,GAAmBC,EAAAA,EAAAA,IAC9B,CAACP,EAHyB,SAAAC,GAAK,OAAIA,EAAMO,MAAO,IAIhD,SAACL,EAAOM,GACN,QAAoBC,IAAhBD,EACF,OAAON,EAAMK,QAAO,SAAAG,GAAO,OACzBA,EAAQC,KAAKC,cAAcC,SAASL,EAAYD,OAAOK,cAAc,GAG3E,I,SCDIE,EAAgBC,EAAAA,KAAaC,MAAM,CACvCL,KAAMI,EAAAA,KAAaE,IAAI,EAAG,qBAAqBC,SAAS,YACxDC,OAAQJ,EAAAA,KACLG,SAAS,YACTD,IAAI,EAAG,uBACPG,QAAQ,gDACRH,IAAI,EAAG,yBAGCI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXtB,GAAWuB,EAAAA,EAAAA,IAAYzB,GAE7B,OACE0B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACbC,GAAI,GACJlB,KAAM,GACNQ,OAAQ,IAEVW,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjB,IAAMC,EAAa,CACjBvB,KAAMqB,EAAOrB,KACbQ,OAAQa,EAAOb,QAGjB,GACElB,EAASkC,OAAS,GAClBlC,EAASmC,MACP,SAAA1B,GAAO,OACLA,EAAQC,KAAKC,gBAAkBsB,EAAWvB,KAAKC,aAAa,IAGhE,OAAOyB,MAAM,GAADC,OAAIJ,EAAWvB,KAAI,4BAEjCW,GAASiB,EAAAA,EAAAA,IAAcL,IACvBD,EAAQO,WACV,EAAEd,UAEFe,EAAAA,EAAAA,MAACzD,EAAU,CAAA0C,SAAA,EACTD,EAAAA,EAAAA,KAAC9B,EAAW,CAAC+C,QAAQ,OAAMhB,SAAC,UAC5BD,EAAAA,EAAAA,KAACpC,EAAiB,CAACwC,GAAG,OAAOlB,KAAK,UAClCc,EAAAA,EAAAA,KAACjC,EAAkB,CAACmB,KAAK,OAAOgC,UAAU,UAC1ClB,EAAAA,EAAAA,KAAC9B,EAAW,CAAC+C,QAAQ,SAAQhB,SAAC,YAC9BD,EAAAA,EAAAA,KAACpC,EAAiB,CAACwC,GAAG,SAASlB,KAAK,SAASiC,KAAK,SAClDnB,EAAAA,EAAAA,KAACjC,EAAkB,CACjBmB,KAAK,SACLgC,UAAU,UAEZlB,EAAAA,EAAAA,KAAC5B,EAAkB,CAAC+C,KAAK,SAAQlB,SAAC,sBAK5C,ECpEamB,EAAc5D,EAAAA,QAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uKAUvB0D,EAAe7D,EAAAA,QAAAA,EAAQM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6CAKvB2D,EAAoB9D,EAAAA,QAAAA,GAASS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uCAK7B4D,EAAe/D,EAAAA,QAAAA,OAAaW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uQCZ5B6D,EAAc,WACzB,IAAM3B,GAAWC,EAAAA,EAAAA,MACX2B,GAAyB1B,EAAAA,EAAAA,IAAYnB,GAE3C,OACEoB,EAAAA,EAAAA,KAACsB,EAAiB,CAAArB,SACfwB,EAAuBC,KAAI,SAAAC,GAAI,OAC9BX,EAAAA,EAAAA,MAACI,EAAW,CAAAnB,SAAA,EACVe,EAAAA,EAAAA,MAACK,EAAY,CAAApB,SAAA,CACV0B,EAAKzC,KAAK,KAAGyC,EAAKjC,WAErBM,EAAAA,EAAAA,KAACuB,EAAY,CACXJ,KAAK,SACLS,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcF,EAAKvB,IAAI,EAACH,SACjD,aAPe0B,EAAKvB,GAUT,KAItB,EC7Ba0B,EAActE,EAAAA,QAAAA,MAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4D,UCE1BoE,EAAgB,WAC3B,IAAMlC,GAAWC,EAAAA,EAAAA,MAGjB,OACEkB,EAAAA,EAAAA,MAAA,OACEgB,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWlC,SAAA,EAE1ED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BACHD,EAAAA,EAAAA,KAAC8B,EAAW,CACVM,SAAU,SAAAC,GAAC,OAAIxC,GAASyC,EAAAA,EAAAA,GAAUD,EAAEE,OAAOC,OAAO,MAI1D,E,UCVe,SAASC,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MACXnB,GAAYoB,EAAAA,EAAAA,IAAYrB,GAM9B,OAJAgE,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACX,GAAG,CAAC9C,KAGFmB,EAAAA,EAAAA,MAAA,OACEgB,MAAO,CACLC,QAAS,OACTE,WAAY,SACZD,cAAe,UAIfjC,SAAA,EAEFD,EAAAA,EAAAA,KAAA,MAAIgC,MAAO,CAAEC,QAAS,OAAQW,eAAgB,UAAW3C,SAAC,eAC1DD,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAAA,MAAIgC,MAAO,CAAEC,QAAS,OAAQW,eAAgB,UAAW3C,SAAC,cAC1DD,EAAAA,EAAAA,KAAC+B,EAAa,IACbpD,IAAaqB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACjBD,EAAAA,EAAAA,KAACwB,EAAW,MAGlB,C","sources":["components/ContactForm/ContactFormStyled.js","redux/Contacts/sellectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  max-width: 360px;\n  padding: 48px;\n  border: 1px black solid;\n  background-color: rgba(206, 206, 206);\n`;\n\nexport const FormikFieldStyled = styled(Field)`\n  padding: 8px;\n  border: 1px rgba(0, 0, 0, 0.16) solid;\n  border-radius: 8px;\n  /* max-width: 180px; */\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: tomato;\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport const LabelStyled = styled.label`\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const SubmitButtonStyled = styled.button`\n  max-width: 106px;\n  padding: 4px;\n  border: 1px rgba(0, 0, 0, 0.16) solid;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const filteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filterValue) => {\n    if (filterValue !== undefined) {\n      return items.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue.filter.toLowerCase())\n      );\n    }\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormikFieldStyled,\n  FormStyled,\n  ErrorMessageStyled,\n  LabelStyled,\n  SubmitButtonStyled,\n} from '../ContactForm/ContactFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/sellectors';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(1, \"Couldn't be empty\").required('Required'),\n  number: Yup.number()\n    .required('Required')\n    .min(7, 'Must have 7 numbers')\n    .integer(\"A phone number can't include a decimal point\")\n    .min(7, 'Must have 7 numbers'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          id: '',\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n          const newContact = {\n            name: values.name,\n            number: values.number,\n          };\n\n          if (\n            contacts.length > 0 &&\n            contacts.find(\n              contact =>\n                contact.name.toLowerCase() === newContact.name.toLowerCase()\n            )\n          ) {\n            return alert(`${newContact.name} is already in contacts`);\n          }\n          dispatch(addNewContact(newContact));\n          actions.resetForm();\n        }}\n      >\n        <FormStyled>\n          <LabelStyled htmlFor=\"name\">Name</LabelStyled>\n          <FormikFieldStyled id=\"name\" name=\"name\" />\n          <ErrorMessageStyled name=\"name\" component=\"span\"></ErrorMessageStyled>\n          <LabelStyled htmlFor=\"number\">Number</LabelStyled>\n          <FormikFieldStyled id=\"number\" name=\"number\" type=\"tel\" />\n          <ErrorMessageStyled\n            name=\"number\"\n            component=\"span\"\n          ></ErrorMessageStyled>\n          <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n        </FormStyled>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  max-width: 380px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const ConstactItem = styled.p`\n  font-weight: 500;\n  margin: 0;\n`;\n\nexport const ContactListStyled = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: white;\n  padding: 4px;\n  padding-left: 12px;\n  padding-right: 12px;\n  border: 1px rgba(0, 0, 0, 0.16) solid;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n`;\n","import { deleteContact } from 'redux/Contacts/operations';\nimport {\n  ContactItem,\n  ContactListStyled,\n  ConstactItem,\n  DeleteButton,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts } from 'redux/Contacts/sellectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const listOfFilteredContacts = useSelector(filteredContacts);\n\n  return (\n    <ContactListStyled>\n      {listOfFilteredContacts.map(item => (\n        <ContactItem key={item.id}>\n          <ConstactItem>\n            {item.name}: {item.number}\n          </ConstactItem>\n          <DeleteButton\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(item.id))}\n          >\n            Delete\n          </DeleteButton>\n        </ContactItem>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n  /* max-width: 160px; */\n  border-radius: 4px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { InputStyled } from './Filter.styled';\nimport { addFilter } from 'redux/Contacts/fitlerSlice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  // const filter = useSelector(state => state.filter);\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n    >\n      <p>Find contacts by name</p>\n      <InputStyled\n        onChange={e => dispatch(addFilter(e.target.value))}\n      ></InputStyled>\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactFilter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport { selectIsLoading } from 'redux/Contacts/sellectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        // marginLeft: '50%',\n        // justifyContent: 'center',\n        // width: '1200',\n      }}\n    >\n      <h1 style={{ display: 'flex', justifyContent: 'center' }}>Phonebook</h1>\n      <ContactForm />\n      <h2 style={{ display: 'flex', justifyContent: 'center' }}>Contacts</h2>\n      <ContactFilter />\n      {isLoading && <b>Loading! Wait a sec...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","FormikFieldStyled","Field","_templateObject2","ErrorMessageStyled","ErrorMessage","_templateObject3","LabelStyled","_templateObject4","SubmitButtonStyled","_templateObject5","selectContacts","state","contacts","items","selectIsLoading","isLoading","filteredContacts","createSelector","filter","filterValue","undefined","contact","name","toLowerCase","includes","contactSchema","Yup","shape","min","required","number","integer","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","id","validationSchema","onSubmit","values","actions","newContact","length","find","alert","concat","addNewContact","resetForm","_jsxs","htmlFor","component","type","ContactItem","ConstactItem","ContactListStyled","DeleteButton","ContactList","listOfFilteredContacts","map","item","onClick","deleteContact","InputStyled","ContactFilter","style","display","flexDirection","alignItems","onChange","e","addFilter","target","value","Contacts","useEffect","fetchContacts","justifyContent"],"sourceRoot":""}